name: Build Executable

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build Executable
      run: |
        pyinstaller --onefile hold-to-lean/main.py

    - name: Upload Executable
      uses: actions/upload-artifact@v2
      with:
        name: main-executable-${{ matrix.os }}
        path: dist/main

    - name: Get the version
      id: get_version
      run: echo ::set-output name=SHA::$(git rev-parse --verify HEAD) && echo ::set-output name=SHORT_SHA::$(git rev-parse --verify --short HEAD)

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.SHORT_SHA }}
        release_name: Release ${{ steps.get_version.outputs.SHORT_SHA }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/main
        asset_name: main
        asset_content_type: application/octet-streamag }} --notes "Release ${{ env.tag }}" --target master